{
	"info": {
		"_postman_id": "bd89c4dd-0145-471c-9c73-391b1f38b498",
		"name": "BetterCalm",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Administrator",
			"item": [
				{
					"name": "Authenticate",
					"item": [
						{
							"name": "Authenticate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"token\", pm.response.json().token);\r",
											"pm.test(\"Authentication successful\", function () {\r",
											"    pm.response.to.have.status(202)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/administrators/authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"administrators",
										"authenticate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Administrator",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"administratorId\", jsonResponse.id);\r",
													"pm.environment.set(\"administratorName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Administrator created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Email\": \"juan@juan.juan\",\r\n    \"Name\": \"juan\",\r\n    \"Password\": \"juan\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new administrator created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Administrator retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct administrator retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"administratorName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/administrators/{{administratorId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"{{administratorId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Add Administrator",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Existing",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new administrator",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"administratorId\", jsonResponse.id);\r",
															"pm.environment.set(\"administratorName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Administrator created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"pedro@pedro.pedro\",\r\n    \"Name\": \"pedro\",\r\n    \"Password\": \"pedro\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new administrator created",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Administrator retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct administrator retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.name).to.eq(pm.environment.get(\"administratorName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/administrators/{{administratorId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"{{administratorId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new administrator",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Administrator not created\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"pedro@pedro.pedro\",\r\n    \"Name\": \"pedro\",\r\n    \"Password\": \"pedro\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Empty body",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new administrator",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Administrator not created\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Null",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new administrator",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Administrator not created\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": null,\r\n    \"Name\": null,\r\n    \"Password\":null\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new administrator Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"administratorId\", jsonResponse.id);\r",
													"pm.environment.set(\"administratorName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Administrator created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Email\": \"chiara@chiara.chiara\",\r\n    \"Name\": \"chiara\",\r\n    \"Password\": \"chiara\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new administrator created Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Administrator retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct administrator retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"administratorName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/administrators/{{administratorId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"{{administratorId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Update Administrator",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"administratorId\", pm.response.json().id);\r",
													"pm.environment.set(\"administratorName\", pm.response.json().name);\r",
													"\r",
													"pm.test(\"Administrator created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Email\": \"paula@paula.paula\",\r\n    \"Name\": \"paula\",\r\n    \"Password\": \"paula\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new administrator created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Administrator retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct administrator retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"administratorName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/administrators/{{administratorId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"{{administratorId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update created administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Administrator updated successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})\r",
													"\r",
													"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
													"console.log(aux.PsychologistSurname)\r",
													"pm.environment.set(\"administratorId\", JSON.parse(pm.request.toJSON().body.raw).administratorId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Email\": \"piero@piero.piero\",\r\n    \"Name\": \"piero\",\r\n    \"Password\": \"piero\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/{{administratorId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"{{administratorId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Error Copy",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = pm.response.json;\r",
													"\r",
													"pm.environment.set(\"token\", jsonResponse.token);\r",
													"\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update created administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Administrator not created successfully\", function () {\r",
													"    pm.response.to.have.status(401)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Email\": \"admin@admin.admin\",\r\n    \"Name\": \"admin\",\r\n    \"Password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/{{administratorId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"{{administratorId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Delete Administrator",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete created administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Administrator not deleted successfully\", function () {\r",
													"    pm.response.to.have.status(401)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/administrators/{{administratorId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"{{administratorId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"administratorId\", jsonResponse.id);\r",
													"pm.environment.set(\"administratorName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Administrator created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Email\": \"mario@mario.mario\",\r\n    \"Name\": \"mario\",\r\n    \"Password\": \"mario\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new administrator created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Administrator retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct administrator retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"administratorName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/administrators/{{administratorId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"{{administratorId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete created administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Administrator deleted successfully\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/administrators/{{administratorId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"{{administratorId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert created administrator deleted",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check administrator deleted successfully\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/administrators/{{administratorId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"{{administratorId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Playlist",
			"item": [
				{
					"name": "Delete Playlist",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = pm.response.json;\r",
													"\r",
													"pm.environment.set(\"token\", jsonResponse.token);\r",
													"\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new playlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
													"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Playlist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"CategoryId\": 2,\r\n    \"Description\": \"For stress\",\r\n    \"ImageURL\": \"for-stress.jpg\",\r\n    \"Name\": \"Stress\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new playlist created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct playlist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"playlistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete playlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist deleted successfully\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new playlist created Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist not retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = pm.response.json;\r",
													"\r",
													"pm.environment.set(\"token\", jsonResponse.token);\r",
													"\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist deleted successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new playlist created Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist not retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Get Playlist",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = pm.response.json;\r",
													"\r",
													"pm.environment.set(\"token\", jsonResponse.token);\r",
													"\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new playlist created Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist not retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = pm.response.json;\r",
													"\r",
													"pm.environment.set(\"token\", jsonResponse.token);\r",
													"\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new playlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
													"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Playlist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"CategoryId\": 1,\r\n    \"Description\": \"For sleeping\",\r\n    \"ImageURL\": \"for-sleeping.jpg\",\r\n    \"Name\": \"Sleep\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new playlist created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct playlist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"playlistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Add Contento to Playlist",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "One playlist",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = pm.response.json;\r",
															"\r",
															"pm.environment.set(\"token\", jsonResponse.token);\r",
															"\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Authenticate Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = pm.response.json;\r",
															"\r",
															"pm.environment.set(\"token\", jsonResponse.token);\r",
															"\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new content",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"contentId\", jsonResponse.id);\r",
															"pm.environment.set(\"contentName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Content created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Reptilia\",\r\n    \"categoryId\": 2,\r\n    \"author\": \"The Strokes\",\r\n    \"duration\": 3.4,\r\n    \"imageURL\": \"reptilia.jpg\",\r\n    \"contentURL\": \"http://reptilia.mp3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playablecontents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new content created",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Content retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct content retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.name).to.eq(pm.environment.get(\"contentName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents",
														"{{contentId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new playlist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
															"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Playlist created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"CategoryId\": 2,\r\n    \"Description\": \"The Strokes\",\r\n    \"ImageURL\": \"the-strokes.jpg\",\r\n    \"Name\": \"The Strokes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new playlist created",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Playlist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct playlist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.name).to.eq(pm.environment.get(\"playlistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/playlists/{{playlistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists",
														"{{playlistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add created content to playlist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
															"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Playlist created successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Reptilia\",\r\n    \"categoryId\": 2,\r\n    \"author\": \"The Strokes\",\r\n    \"duration\": 3.4,\r\n    \"imageURL\": \"reptilia.jpg\",\r\n    \"contentURL\": \"http://reptilia.mp3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playlists/{{playlistId}}/contents?contentId={{contentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists",
														"{{playlistId}}",
														"contents"
													],
													"query": [
														{
															"key": "contentId",
															"value": "{{contentId}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Another playlist",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = pm.response.json;\r",
															"\r",
															"pm.environment.set(\"token\", jsonResponse.token);\r",
															"\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new content",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"contentId\", jsonResponse.id);\r",
															"pm.environment.set(\"contentName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Content created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Time to pretend\",\r\n    \"categoryId\": 2,\r\n    \"author\": \"MGMT\",\r\n    \"duration\": 1.4,\r\n    \"imageURL\": \"time-to-pretend.jpg\",\r\n    \"contentURL\": \"http://time-to-pretend.mp3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playablecontents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new content created",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Content retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct content retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.name).to.eq(pm.environment.get(\"contentName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents",
														"{{contentId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new playlist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
															"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Playlist created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"CategoryId\": 2,\r\n    \"Description\": \"Songs\",\r\n    \"ImageURL\": \"MGMT.jpg\",\r\n    \"Name\": \"MGMT\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new playlist created",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Playlist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct playlist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.name).to.eq(pm.environment.get(\"playlistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/playlists/{{playlistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists",
														"{{playlistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add created content to playlist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
															"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Playlist created successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Time to pretend\",\r\n    \"categoryId\": 2,\r\n    \"author\": \"MGMT\",\r\n    \"duration\": 1.4,\r\n    \"imageURL\": \"time-to-pretend.jpg\",\r\n    \"contentURL\": \"http://time-to-pretend.mp3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playlists/{{playlistId}}/contents?contentId={{contentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists",
														"{{playlistId}}",
														"contents"
													],
													"query": [
														{
															"key": "contentId",
															"value": "{{contentId}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Error",
							"item": [
								{
									"name": "Existing",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = pm.response.json;\r",
															"\r",
															"pm.environment.set(\"token\", jsonResponse.token);\r",
															"\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new content",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"contentId\", jsonResponse.id);\r",
															"pm.environment.set(\"contentName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Content created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Last Nite\",\r\n    \"categoryId\": 3,\r\n    \"author\": \"The Strokes\",\r\n    \"duration\": 3.4,\r\n    \"imageURL\": \"last-nite.jpg\",\r\n    \"contentURL\": \"http://last-nite.mp3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playablecontents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new content created",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Content retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct content retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.name).to.eq(pm.environment.get(\"contentName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents",
														"{{contentId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new playlist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
															"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Playlist created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"CategoryId\": 3,\r\n    \"Description\": \"the strokes\",\r\n    \"ImageURL\": \"the-strokes.jpg\",\r\n    \"Name\": \"The Strokes\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playlists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new playlist created",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"playlist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct playlist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.name).to.eq(pm.environment.get(\"playlistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/playlists/{{playlistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists",
														"{{playlistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add created content to playlist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
															"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Content added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Last Nite\",\r\n    \"categoryId\": 3,\r\n    \"author\": \"The Strokes\",\r\n    \"duration\": 3.4,\r\n    \"imageURL\": \"last-nite.jpg\",\r\n    \"contentURL\": \"http://last-nite.mp3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playlists/{{playlistId}}/contents?contentId={{contentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists",
														"{{playlistId}}",
														"contents"
													],
													"query": [
														{
															"key": "contentId",
															"value": "{{contentId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new playlist created Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"playlist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct playlist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.name).to.eq(pm.environment.get(\"playlistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/playlists/{{playlistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists",
														"{{playlistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add another content to playlist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Content not added successfully\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Last Nite\",\r\n    \"categoryId\": 3,\r\n    \"author\": \"The Strokes\",\r\n    \"duration\": 3.4,\r\n    \"imageURL\": \"last-nite.jpg\",\r\n    \"contentURL\": \"http://last-nite.mp3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playlists/{{playlistId}}/contents?contentId={{contentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playlists",
														"{{playlistId}}",
														"contents"
													],
													"query": [
														{
															"key": "contentId",
															"value": "{{contentId}}"
														}
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Add Playlist",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = pm.response.json;\r",
													"\r",
													"pm.environment.set(\"token\", jsonResponse.token);\r",
													"\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new playlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
													"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Playlist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"CategoryId\": 2,\r\n    \"Description\": \"For meditation\",\r\n    \"ImageURL\": \"for-meditation.jpg\",\r\n    \"Name\": \"Marconi Union\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new playlist created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct playlist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"playlistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = pm.response.json;\r",
													"\r",
													"pm.environment.set(\"token\", jsonResponse.token);\r",
													"\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new playlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
													"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Playlist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"CategoryId\": 4,\r\n    \"Description\": \"Workout\",\r\n    \"ImageURL\": \"workout.jpg\",\r\n    \"Name\": \"Workout\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new playlist created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct playlist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"playlistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create same playlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist not created successfully\", function () {\r",
													"    pm.response.to.have.status(400)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"CategoryId\": 4,\r\n    \"Description\": \"Workout\",\r\n    \"ImageURL\": \"workout.jpg\",\r\n    \"Name\": \"Workout\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Playable Content",
			"item": [
				{
					"name": "Get Playable Content",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get created content without authentication",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Content not retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents",
												"{{contentId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"contentId\", jsonResponse.id);\r",
													"pm.environment.set(\"contentName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Content created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Heaven\",\r\n    \"categoryId\": 3,\r\n    \"author\": \"Fiction Factory\",\r\n    \"duration\": 2.3,\r\n    \"imageURL\": \"heaven.jpg\",\r\n    \"contentURL\": \"http://heaven.mp3\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playablecontents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get created content without authentication",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Content retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct content retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"contentName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents",
												"{{contentId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Add Playable Content",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Existing",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new content",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"contentId\", jsonResponse.id);\r",
															"pm.environment.set(\"contentName\", jsonResponse.name);\r",
															"\r",
															"pm.test(\"Content created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Naive\",\r\n    \"categoryId\": 2,\r\n    \"author\": \"The Kooks\",\r\n    \"duration\": 3.3,\r\n    \"imageURL\": \"naive.jpg\",\r\n    \"content-URL\": \"http://naive.mp3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playablecontents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get created content without authentication",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Content retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct content retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.name).to.eq(pm.environment.get(\"contentName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents",
														"{{contentId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create another new content",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Content not created successfully\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Naive\",\r\n    \"categoryId\": 2,\r\n    \"author\": \"The Kooks\",\r\n    \"duration\": 3.3,\r\n    \"imageURL\": \"naive.jpg\",\r\n    \"contentURL\": \"http://naive.mp3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playablecontents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Empty body",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new content",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Content not created successfully\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playablecontents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Empty",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new content",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Content not created successfully\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"\",\r\n    \"categoryId\": \"\",\r\n    \"author\": \"\",\r\n    \"duration\": \"\",\r\n    \"imageURL\": \"\",\r\n    \"contentURL\": \"\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playablecontents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Null",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new content",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Content not created successfully\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": null,\r\n    \"categoryId\": null,\r\n    \"author\": null,\r\n    \"duration\": null,\r\n    \"imageURL\": null,\r\n    \"content-URL\": null\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/playablecontents",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"playablecontents"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"contentId\", jsonResponse.id);\r",
													"pm.environment.set(\"contentName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Content created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Wonderwall\",\r\n    \"categoryId\": 3,\r\n    \"author\": \"Oasis\",\r\n    \"duration\": 2.3,\r\n    \"imageURL\": \"oasis.jpg\",\r\n    \"contentURL\": \"http://oasis.mp3\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playablecontents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get created content without authentication",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Content retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct content retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"contentName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents",
												"{{contentId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Delete Playable Content",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete created content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Content not deleted successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents",
												"{{contentId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"contentId\", jsonResponse.id);\r",
													"pm.environment.set(\"contentName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Content created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Linger\",\r\n    \"categoryId\": 2,\r\n    \"author\": \"The Cranberries\",\r\n    \"duration\": 2.6,\r\n    \"imageURL\": \"linger.jpg\",\r\n    \"contentURL\": \"http://linger.mp3\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playablecontents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get created content without authentication",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Content retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct content retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"contentName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents",
												"{{contentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete created content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Content deleted successfully\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents",
												"{{contentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert created content deleted",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check content deleted successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents",
												"{{contentId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "Passing",
					"item": [
						{
							"name": "Get Categories",
							"item": [
								{
									"name": "Get Categories",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Categories retrieved successfully\", function () {",
													"    pm.response.to.have.status(200)",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get category contents",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"contentId\", jsonResponse.id);\r",
													"pm.environment.set(\"contentName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Content created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Wonderwall\",\r\n    \"categoryId\": 2,\r\n    \"author\": \"Oasis\",\r\n    \"duration\": 2.3,\r\n    \"imageURL\": \"oasis.jpg\",\r\n    \"content-URL\": \"http://oasis.mp3\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playablecontents",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get created content without authentication",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Content retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct content retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"contentName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playablecontents/{{contentId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playablecontents",
												"{{contentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new playlist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"playlistId\", jsonResponse.id);\r",
													"pm.environment.set(\"playlistName\", jsonResponse.name);\r",
													"\r",
													"pm.test(\"Playlist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"CategoryId\": 2,\r\n    \"Description\": \"For stress\",\r\n    \"ImageURL\": \"for-stress.jpg\",\r\n    \"Name\": \"Stress\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/playlists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new playlist created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Playlist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct playlist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.name).to.eq(pm.environment.get(\"playlistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/playlists/{{playlistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"playlists",
												"{{playlistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Category contents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Categories retrieved successfully\", function () {",
													"    pm.response.to.have.status(200)",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/categories/2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												"2"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Psychologist",
			"item": [
				{
					"name": "Get Psychologist",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist not retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
													"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
													"\r",
													"pm.test(\"Psychologist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Juana\",\r\n    \"PsychologistSurname\": \"Lopez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 2,\r\n    \"Expertise\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Add Psychologist",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Complete",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
															"\r",
															"pm.test(\"Schedule created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"MondayConsultations\": 2,\r\n    \"TuesdayConsultations\": 2,\r\n    \"WednesdayConsultations\": 3,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 1\r\n                      \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Schedule retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct schedule retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules",
														"{{scheduleId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
															"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
															"\r",
															"pm.test(\"Psychologist created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PsychologistName\": \"Juna manuel\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 4,\r\n    \"Expertise\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new problem to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Problem added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Lucas\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 2,\r\n    \"Expertise\": [ ] \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"problems"
													],
													"query": [
														{
															"key": "problemId",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Schedule added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1  \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"schedules"
													],
													"query": [
														{
															"key": "scheduleId",
															"value": "{{scheduleId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Simple",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
															"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
															"\r",
															"pm.test(\"Psychologist created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PsychologistName\": \"Mario\",\r\n    \"PsychologistSurname\": \"Martinez\",\r\n    \"IsRemote\": false,\r\n    \"Address\": \"Better Calm 1234\",\r\n    \"ActiveYears\": 5,\r\n    \"Expertise\": []\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist not retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Update Psychologist",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Schedule created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"MondayConsultations\": 2,\r\n    \"TuesdayConsultations\": 2,\r\n    \"WednesdayConsultations\": 3,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 1\r\n                      \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct schedule retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
													"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
													"\r",
													"pm.test(\"Psychologist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 2,\r\n    \"Expertise\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new problem to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Problem added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId={{problemId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"problems"
											],
											"query": [
												{
													"key": "problemId",
													"value": "{{problemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1  \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"schedules"
											],
											"query": [
												{
													"key": "scheduleId",
													"value": "{{scheduleId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
													"console.log(aux.PsychologistSurname)\r",
													"pm.environment.set(\"psychologistSurname\", JSON.parse(pm.request.toJSON().body.raw).PsychologistSurname);\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Picapiedra\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 2,\r\n    \"Expertise\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistSurname).to.eq(pm.environment.get(\"psychologistSurname\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
													"console.log(aux.PsychologistSurname)\r",
													"pm.environment.set(\"psychologistSurname\", JSON.parse(pm.request.toJSON().body.raw).PsychologistSurname);\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    pm.response.to.have.status(404)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Picapiedra\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 2,\r\n    \"Expertise\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Delete Psychologist",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Schedule created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"MondayConsultations\": 2,\r\n    \"TuesdayConsultations\": 2,\r\n    \"WednesdayConsultations\": 3,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 1\r\n                      \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct schedule retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
													"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
													"\r",
													"pm.test(\"Psychologist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Belen\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 2,\r\n    \"Expertise\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new problem to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Problem added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId={{problemId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"problems"
											],
											"query": [
												{
													"key": "problemId",
													"value": "{{problemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1  \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"schedules"
											],
											"query": [
												{
													"key": "scheduleId",
													"value": "{{scheduleId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
													"console.log(aux.PsychologistSurname)\r",
													"pm.environment.set(\"psychologistSurname\", JSON.parse(pm.request.toJSON().body.raw).PsychologistSurname);\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Picapiedra\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 2,\r\n    \"Expertise\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistSurname).to.eq(pm.environment.get(\"psychologistSurname\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist deleted successfully\", function () {\r",
													"    pm.response.to.have.status(204);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist deleted successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Add schedule",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule not retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Schedule created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"MondayConsultations\": 4,\r\n    \"TuesdayConsultations\": 4,\r\n    \"WednesdayConsultations\": 4,\r\n    \"ThursdayConsultations\": 4,\r\n    \"FridayConsultations\": 4\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct schedule retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Get schedule",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct schedule retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Add schedule to psychologist",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Schedule created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"MondayConsultations\": 2,\r\n    \"TuesdayConsultations\": 2,\r\n    \"WednesdayConsultations\": 3,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 1\r\n                      \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct schedule retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule added successfully\", function () {\r",
													"    pm.response.to.have.status(400)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Juana\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1  \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"schedules"
											],
											"query": [
												{
													"key": "scheduleId",
													"value": "{{scheduleId}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Schedule created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"MondayConsultations\": 2,\r\n    \"TuesdayConsultations\": 2,\r\n    \"WednesdayConsultations\": 3,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 1\r\n                      \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct schedule retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
													"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
													"\r",
													"pm.test(\"Psychologist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Lucas\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 2,\r\n    \"Expertise\": []\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Juana\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1  \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"schedules"
											],
											"query": [
												{
													"key": "scheduleId",
													"value": "{{scheduleId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Consultation",
			"item": [
				{
					"name": "Add consultation",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "No psychologist",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
															"\r",
															"pm.test(\"Schedule created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"MondayConsultations\": 1,\r\n    \"TuesdayConsultations\": 2,\r\n    \"WednesdayConsultations\": 3,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 1\r\n                      \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Schedule retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct schedule retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules",
														"{{scheduleId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new consulation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Consultation not created successfully\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PatientName\": \"Matias\",\r\n    \"PatientEmail\": \"matias@gamil.com\",\r\n    \"ProblemId\": 1,\r\n    \"PatientPhone\": 999888777,\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consultations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consultations"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Full schedule",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
															"\r",
															"pm.test(\"Schedule created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"MondayConsultations\": 5,\r\n    \"TuesdayConsultations\": 5,\r\n    \"WednesdayConsultations\": 5,\r\n    \"ThursdayConsultations\": 5,\r\n    \"FridayConsultations\": 5\r\n                      \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Schedule retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct schedule retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules",
														"{{scheduleId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
															"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
															"\r",
															"pm.test(\"Psychologist created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": []\r\n                \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new problem to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Problem added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId={{problemId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"problems"
													],
													"query": [
														{
															"key": "problemId",
															"value": "{{problemId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Problem added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"schedules"
													],
													"query": [
														{
															"key": "scheduleId",
															"value": "{{scheduleId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update schedule of psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
															"console.log(aux.PsychologistSurname)\r",
															"pm.environment.set(\"psychologistSurname\", JSON.parse(pm.request.toJSON().body.raw).PsychologistSurname);\r",
															"\r",
															"pm.test(\"Psychologist updated successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1,\r\n    \"Schedule\": {\r\n        \"MondayConsultations\": 5,\r\n        \"TuesdayConsultations\": 5,\r\n        \"WednesdayConsultations\": 5,\r\n        \"ThursdayConsultations\": 5,\r\n        \"FridayConsultations\": 5\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist Copy 2",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Psychologist updated successfully\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistSurname).to.eq(pm.environment.get(\"psychologistSurname\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new consulation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Consultation not created created successfully\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PatientName\": \"Matias\",\r\n    \"PatientEmail\": \"matias@gamil.com\",\r\n    \"ProblemId\": 1,\r\n    \"PatientPhone\": 999888777,\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consultations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consultations"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Invalid remote address",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
															"\r",
															"pm.test(\"Schedule created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"MondayConsultations\": 1,\r\n    \"TuesdayConsultations\": 2,\r\n    \"WednesdayConsultations\": 3,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 1\r\n                      \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Schedule retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct schedule retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules",
														"{{scheduleId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
															"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
															"\r",
															"pm.test(\"Psychologist created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": []\r\n                \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new problem to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Problem added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId={{problemId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"problems"
													],
													"query": [
														{
															"key": "problemId",
															"value": "{{problemId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Problem added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Pedro\",\r\n    \"PsychologistSurname\": \"Perez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"schedules"
													],
													"query": [
														{
															"key": "scheduleId",
															"value": "{{scheduleId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new consulation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Consultation not created successfully\", function () {\r",
															"    pm.response.to.have.status(400)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PatientName\": \"Matias\",\r\n    \"PatientEmail\": \"matias@gamil.com\",\r\n    \"ProblemId\": 1,\r\n    \"PatientPhone\": 999888777,\r\n    \"IsRemote\": true,\r\n    \"Address\": \"\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consultations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consultations"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Remote address",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
															"\r",
															"pm.test(\"Schedule created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"MondayConsultations\": 1,\r\n    \"TuesdayConsultations\": 1,\r\n    \"WednesdayConsultations\": 2,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 1\r\n                      \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Schedule retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct schedule retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules",
														"{{scheduleId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
															"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
															"\r",
															"pm.test(\"Psychologist created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PsychologistName\": \"Lucia\",\r\n    \"PsychologistSurname\": \"Gomez\",\r\n    \"IsRemote\": true,\r\n    \"Adress\": \"\",\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": []         \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new problem to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"problemId\", pm.response.json().id);\r",
															"pm.environment.set(\"problemName\", pm.response.json().Name);\r",
															"\r",
															"pm.test(\"Problem added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Lucia\",\r\n    \"PsychologistSurname\": \"Gomez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"problems"
													],
													"query": [
														{
															"key": "problemId",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Problem added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Lucia\",\r\n    \"PsychologistSurname\": \"Gomez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"schedules"
													],
													"query": [
														{
															"key": "scheduleId",
															"value": "{{scheduleId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update schedule of psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
															"console.log(aux.PsychologistSurname)\r",
															"pm.environment.set(\"psychologistSurname\", JSON.parse(pm.request.toJSON().body.raw).PsychologistSurname);\r",
															"\r",
															"pm.test(\"Psychologist updated successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PsychologistName\": \"Lucia\",\r\n    \"PsychologistSurname\": \"Lucia\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1,\r\n    \"Schedule\": {\r\n            \"MondayConsultations\": 1,\r\n            \"TuesdayConsultations\": 2,\r\n            \"WednesdayConsultations\": 2,\r\n            \"ThursdayConsultations\": 2,\r\n            \"FridayConsultations\": 1\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Psychologist updated successfully\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistSurname).to.eq(pm.environment.get(\"psychologistSurname\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new consulation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"consultationId\", jsonResponse.id);\r",
															"\r",
															"pm.test(\"Consultation created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PatientName\": \"Matias\",\r\n    \"PatientEmail\": \"matias@gamil.com\",\r\n    \"ProblemId\": 1,\r\n    \"PatientPhone\": 999888777,\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"Date\": 1\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consultations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consultations"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new consultation created",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Consultation retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/consultations/{{consultationId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consultations",
														"{{consultationId}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Not remote address",
									"item": [
										{
											"name": "Authenticate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.environment.set(\"token\", pm.response.json().token);\r",
															"pm.test(\"Authentication successful\", function () {\r",
															"    pm.response.to.have.status(202)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/administrators/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"administrators",
														"authenticate"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
															"\r",
															"pm.test(\"Schedule created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"MondayConsultations\": 0,\r\n    \"TuesdayConsultations\": 1,\r\n    \"WednesdayConsultations\": 1,\r\n    \"ThursdayConsultations\": 1,\r\n    \"FridayConsultations\": 0\r\n                      \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created schedule",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Schedule retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct schedule retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"schedules",
														"{{scheduleId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
															"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
															"\r",
															"pm.test(\"Psychologist created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PsychologistName\": \"Joaquin\",\r\n    \"PsychologistSurname\": \"Martinez\",\r\n    \"IsRemote\": false,\r\n    \"ActiveYears\": 3,\r\n    \"Expertise\": []\r\n                \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly created psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new problem to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Problem added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 2,\r\n    \"PsychologistName\": \"Joaquin\",\r\n    \"PsychologistSurname\": \"Martinez\",\r\n    \"IsRemote\": false,\r\n    \"ActiveYears\": 3,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"problems"
													],
													"query": [
														{
															"key": "problemId",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new schedule to psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Problem added successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Id\": 2,\r\n    \"PsychologistName\": \"Joaquin\",\r\n    \"PsychologistSurname\": \"Martinez\",\r\n    \"IsRemote\": false,\r\n    \"ActiveYears\": 3,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}",
														"schedules"
													],
													"query": [
														{
															"key": "scheduleId",
															"value": "{{scheduleId}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Correct psychologist retrieved\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create new consulation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"const jsonResponse = JSON.parse(responseBody);\r",
															"\r",
															"pm.environment.set(\"consultationId\", jsonResponse.id);\r",
															"\r",
															"pm.test(\"Consultation created successfully\", function () {\r",
															"    pm.response.to.have.status(201)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PatientName\": \"Matias\",\r\n    \"PatientEmail\": \"matias@gamil.com\",\r\n    \"ProblemId\": 1,\r\n    \"PatientPhone\": 999888777,\r\n    \"IsRemote\": false,\r\n    \"Date\": 1,\r\n    \"Address\": \"18 de julio 1122\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/consultations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consultations"
													]
												}
											},
											"response": []
										},
										{
											"name": "Assert new consultation created",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Consultation retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/consultations/{{consultationId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"consultations",
														"{{consultationId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update schedule of psychologist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
															"console.log(aux.PsychologistSurname)\r",
															"pm.environment.set(\"psychologistSurname\", JSON.parse(pm.request.toJSON().body.raw).PsychologistSurname);\r",
															"\r",
															"pm.test(\"Psychologist updated successfully\", function () {\r",
															"    pm.response.to.have.status(200)\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"PsychologistName\": \"Joaquin\",\r\n    \"PsychologistSurname\": \"Martinez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1,\r\n     \"Schedule\": {\r\n        \"MondayConsultations\": 0,\r\n        \"TuesdayConsultations\": 2,\r\n        \"WednesdayConsultations\": 1,\r\n        \"ThursdayConsultations\": 1,\r\n        \"FridayConsultations\": 0\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get newly updated psychologist Copy",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Psychologist retrieved successfully\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"\r",
															"pm.test(\"Psychologist updated successfully\", function () {\r",
															"    const response = pm.response.json();\r",
															"    pm.expect(response.psychologistSurname).to.eq(pm.environment.get(\"psychologistSurname\"));\r",
															"})"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{token}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"psychologists",
														"{{psychologistId}}"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Get consultation",
					"item": [
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new consultation created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Consultation not retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/consultations/{{consultationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations",
												"{{consultationId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Schedule created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"MondayConsultations\": 0,\r\n    \"TuesdayConsultations\": 0,\r\n    \"WednesdayConsultations\": 0,\r\n    \"ThursdayConsultations\": 0,\r\n    \"FridayConsultations\": 0\r\n                      \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct schedule retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
													"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
													"\r",
													"pm.test(\"Psychologist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Nina\",\r\n    \"PsychologistSurname\": \"Lopez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": []\r\n                \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new problem to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Problem added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Nina\",\r\n    \"PsychologistSurname\": \"Lopez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId={{problemId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"problems"
											],
											"query": [
												{
													"key": "problemId",
													"value": "{{problemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Problem added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Nina\",\r\n    \"PsychologistSurname\": \"Lopez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"schedules"
											],
											"query": [
												{
													"key": "scheduleId",
													"value": "{{scheduleId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update schedule of psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
													"console.log(aux.PsychologistSurname)\r",
													"pm.environment.set(\"psychologistSurname\", JSON.parse(pm.request.toJSON().body.raw).PsychologistSurname);\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Lucia\",\r\n    \"PsychologistSurname\": \"Lucia\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1,\r\n    \"Schedule\": {\r\n            \"MondayConsultations\": 0,\r\n            \"TuesdayConsultations\": 0,\r\n            \"WednesdayConsultations\": 0,\r\n            \"ThursdayConsultations\": 0,\r\n            \"FridayConsultations\": 1\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistSurname).to.eq(pm.environment.get(\"psychologistSurname\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new consulation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"consultationId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Consultation created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PatientName\": \"Nico\",\r\n    \"PatientEmail\": \"nico@gamil.com\",\r\n    \"ProblemId\": 1,\r\n    \"PatientPhone\": 555888777,\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"Date\": 4\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consultations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new consultation created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Consultation retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/consultations/{{consultationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations",
												"{{consultationId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Get consultations",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Schedule created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"MondayConsultations\": 0,\r\n    \"TuesdayConsultations\": 2,\r\n    \"WednesdayConsultations\": 2,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 0\r\n                      \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct schedule retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
													"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
													"\r",
													"pm.test(\"Psychologist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Matias\",\r\n    \"PsychologistSurname\": \"Martinez\",\r\n    \"IsRemote\": false,\r\n    \"ActiveYears\": 3,\r\n    \"Expertise\": []\r\n                \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new problem to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Problem added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 2,\r\n    \"PsychologistName\": \"Matias\",\r\n    \"PsychologistSurname\": \"Martinez\",\r\n    \"IsRemote\": false,\r\n    \"ActiveYears\": 3,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId={{problemId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"problems"
											],
											"query": [
												{
													"key": "problemId",
													"value": "{{problemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Problem added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 2,\r\n    \"PsychologistName\": \"Matias\",\r\n    \"PsychologistSurname\": \"Martinez\",\r\n    \"IsRemote\": false,\r\n    \"ActiveYears\": 3,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"schedules"
											],
											"query": [
												{
													"key": "scheduleId",
													"value": "{{scheduleId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new consulation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"consultationId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Consultation created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PatientName\": \"Matias\",\r\n    \"PatientEmail\": \"matias@gamil.com\",\r\n    \"ProblemId\": 1,\r\n    \"PatientPhone\": 999888777,\r\n    \"IsRemote\": false,\r\n    \"Date\": 1,\r\n    \"Address\": \"18 de julio 1122\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consultations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new consultation created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Consultation retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/consultations/{{consultationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations",
												"{{consultationId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update schedule of psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
													"console.log(aux.PsychologistSurname)\r",
													"pm.environment.set(\"psychologistSurname\", JSON.parse(pm.request.toJSON().body.raw).PsychologistSurname);\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Matias\",\r\n    \"PsychologistSurname\": \"Martinez\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1,\r\n     \"Schedule\": {\r\n        \"MondayConsultations\": 0,\r\n        \"TuesdayConsultations\": 2,\r\n        \"WednesdayConsultations\": 1,\r\n        \"ThursdayConsultations\": 1,\r\n        \"FridayConsultations\": 0\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistSurname).to.eq(pm.environment.get(\"psychologistSurname\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new consultation created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Consultation retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/consultations/{{consultationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations",
												"{{consultationId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new consultation created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Consultation retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/consultations/{{consultationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations",
												"{{consultationId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Get consultation by psychologist",
					"item": [
						{
							"name": "Passing",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"scheduleId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Schedule created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"MondayConsultations\": 1,\r\n    \"TuesdayConsultations\": 1,\r\n    \"WednesdayConsultations\": 2,\r\n    \"ThursdayConsultations\": 2,\r\n    \"FridayConsultations\": 1\r\n                      \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created schedule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Schedule retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct schedule retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.id).to.eq(pm.environment.get(\"scheduleId\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/schedules/{{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"schedules",
												"{{scheduleId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"psychologistId\", jsonResponse.id);\r",
													"pm.environment.set(\"psychologistName\", jsonResponse.psychologistName);\r",
													"\r",
													"pm.test(\"Psychologist created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Maria\",\r\n    \"PsychologistSurname\": \"Gomez\",\r\n    \"IsRemote\": true,\r\n    \"Adress\": \"\",\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": []\r\n                \r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly created psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new problem to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Problem added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Maria\",\r\n    \"PsychologistSurname\": \"Gomez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/problems?problemId={{problemId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"problems"
											],
											"query": [
												{
													"key": "problemId",
													"value": "{{problemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new schedule to psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Problem added successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 1,\r\n    \"PsychologistName\": \"Maria\",\r\n    \"PsychologistSurname\": \"Gomez\",\r\n    \"IsRemote\": true,\r\n    \"ActiveYears\": 1,\r\n    \"Expertise\": [\r\n\r\n    ] \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}/schedules?scheduleId={{scheduleId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}",
												"schedules"
											],
											"query": [
												{
													"key": "scheduleId",
													"value": "{{scheduleId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct psychologist retrieved\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistName).to.eq(pm.environment.get(\"psychologistName\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create new consulation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const jsonResponse = JSON.parse(responseBody);\r",
													"\r",
													"pm.environment.set(\"consultationId\", jsonResponse.id);\r",
													"\r",
													"pm.test(\"Consultation created successfully\", function () {\r",
													"    pm.response.to.have.status(201)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PatientName\": \"Matias\",\r\n    \"PatientEmail\": \"matias@gamil.com\",\r\n    \"ProblemId\": 1,\r\n    \"PatientPhone\": 999888777,\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"Date\": 1\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/consultations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Assert new consultation created",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Consultation retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/consultations/{{consultationId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations",
												"{{consultationId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update schedule of psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var aux = JSON.parse(pm.request.toJSON().body.raw)\r",
													"console.log(aux.PsychologistSurname)\r",
													"pm.environment.set(\"psychologistSurname\", JSON.parse(pm.request.toJSON().body.raw).PsychologistSurname);\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    pm.response.to.have.status(200)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PsychologistName\": \"Maria\",\r\n    \"PsychologistSurname\": \"Miranda\",\r\n    \"IsRemote\": true,\r\n    \"Address\": \"https://betterCalm.com.uy/meeting_id/\",\r\n    \"ActiveYears\": 1,\r\n    \"Schedule\": {\r\n            \"MondayConsultations\": 1,\r\n            \"TuesdayConsultations\": 2,\r\n            \"WednesdayConsultations\": 2,\r\n            \"ThursdayConsultations\": 2,\r\n            \"FridayConsultations\": 1\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get newly updated psychologist Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Psychologist retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Psychologist updated successfully\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.psychologistSurname).to.eq(pm.environment.get(\"psychologistSurname\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/psychologists/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"psychologists",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get consultations from psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Consultation retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"\r",
													"pm.test(\"Correct cosultation retrieved successfully\", function () {\r",
													"    const response = pm.response.json();\r",
													"    pm.expect(response.consultationId).to.eq(pm.environment.get(\"consultationId\"));\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consultations/psychologist/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations",
												"psychologist",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Error",
							"item": [
								{
									"name": "Authenticate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"token\", pm.response.json().token);\r",
													"pm.test(\"Authentication successful\", function () {\r",
													"    pm.response.to.have.status(202)\r",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"admin@admin.admin\",\r\n    \"password\": \"admin\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/administrators/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"administrators",
												"authenticate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get consultations from psychologist",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Consultation retrieved successfully\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consultations/psychologist/{{psychologistId}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consultations",
												"psychologist",
												"{{psychologistId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000/api"
		},
		{
			"key": "variable_key",
			"value": ""
		}
	]
}